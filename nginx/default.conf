## TERMINOLOGY
# . upstream: a server that is behind nginx which it can redirects traffic to.
#                     ---> client (upstream)
# browser -> nginx --
#                     ---> api (upstream)

# . rewrite: rules for chopping the URL.
# . server {}: reffers to the actual nginx server.

upstream client {
  server client:3000;
}

upstream api {
  server api:5000;
}

## ROUTING RULES
server {
  listen 80;

  # Every request sent to "/", proxy it to the "client" upstream
  location / {
    proxy_pass http://client;
  }

  location /sockjs-node {
    proxy_pass http://client;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  # Every request sent to "/", proxy it to the "api" upstream
  location /api/ {
    # Chop the "/api/" from the path and leave everything else. "$1" reffers to the matched regex sentence. "break" suspends the rewrite operation (it is curried);
    rewrite /api/(.*) /$1 break;
    proxy_pass http://api;
  }
}

